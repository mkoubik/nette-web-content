Migrating to version 2.1
************************

.[perex]
There are [#new features] and same [incompatibilities|#Backward Incompatible Changes] that should be considered, and code should be tested before switching Nette Framework versions.


New Features
============

Application & Presenter
-----------
- Presenter: new method `sendJson()`
- PresenterFactory: configurable mapping Presenter name -> Class name
- Route: new pseudo-variables `%basePath%`, `%tld%` and `%domain%`

Caching
--------
- added SQLite storage (`Nette/Caching/Storages/SQLiteStorage`)

Database (NDB)
--------------
- complete refactoring, a ton of bug fixes
- Connection:
	- lazy connection
	- all queries are logged (error queries, transactions, …)
	- added onConnect event
	- DSN in connection panel
- much better (dibi-like) SQL preprocessor
- Selection, ActiveRow: insert() & update() methods return row instances with refetched data
- Selection: added placeholder support select(), group(), having(), order() methods
- SqlLiteral: added placeholder support
- Selection:
	- added: WHERE conditions consider NOT for IN operator
	- insert() method returns IRow
- drivers:
	- new driver for Sqlsrv
	- Sqlite supports multi-inserts
	- fixes for PostgreSQL

Debugger
--------
- Dumper: colored and clickable dumps in HTML or terminal
- Debugger: full stack trace on fatal errors (requires Xdebug)
- Debugger: method `barDump()` accepts options
- BlueScreen: new property `$collapsePaths` which allows you to configure which paths are collapses in stack trace
- Bar: you can see bar after redirect
- Bar: new method `getPanel()`
- Dumper: possibility to include JS & CSS separately

Dependency Injection (DI)
-------------------------
- annotation @inject
- auto-generated factories and accessors via interface
- adding compiler extensions via config file
- auto-detection of sections in config file
- configurable presenters via config file
- Container: new methods `findByType()` and `callInjects()`

Forms
-----
- new macro `n:name` for `<form> <input> <select> <textarea>`
- partially rendered radiolists using `{input name:$key}` and `{label name:$key}`
- setOmitted: excludes value from $form->getValues() result
- removed dependency on Environment
- improved toggles
- improved netteForms.js
- validation scopes
- data-nette-rules attribute is JSON
- `getOwnErrors()` returns only errors attached to form
- Radiolist::getLabel(..., $key) returns label for single item

Http
----
- added new SessionPanel
- Helpers: new method `ipMatch()`
- RequestFactory: new method `setProxy()`
- Url: new methods `getQueryParameter()` and `setQueryParameter()`

Latte
-----
- new modifier `|noescape` which is preferred over exclamation mark
- new macro `n:ifcontent`
- `{include block}` can be written without hash
- template allows helpers overriding
- native support for empty macros `{macro /}`
- a lot of small improvements
- PhpWriter supports indexed arguments like %1.raw

Utils
-----
- Arrays: new method `isList()`
- Arrays: method `flatten()` supports key preserving
- Strings: new methods `findPrefix()` and `normalizeNewLines()`
- Json: supports pretty output
- Neon: is superset of JSON
- Validators: new method `isType()`
- new utility class `FileSystem`
- new utility class `Callback`

Mailing
-------
- SmtpMailer: persistent connection
- SmtpMailer: some methods protected and can be overloaded

Others
------
- ObjectMixin: new methods `getMagicMethods`, `getExtensionMethod`, `setExtensionMethod` and `checkType`
- ObjectMixin: magic methods setProperty(), getProperty(), isProperty() and addProperty() by @method
- both `RobotLoader` and `NetteLoader` can be registered before existing autoloaders instead of after
- SafeStream: supports `ftruncate` (requires PHP 5.4+)



Backward Incompatible Changes
=============================

Database (NDB)
--------------

- `Nette\Database\Connection` is not a descendant of `PDO`:http://www.php.net/manual/en/class.pdo.php
- rename methods `exec()` -> `query()`, `fetchColumn()` -> `fetchField()` and `lastInsertId()` -> `getInsertId()`
- `Nette\Database\Statement` rename to `Nette\Database\ResultSet`, which is not a descendant of `PDOStatement`:http://www.php.net/manual/en/class.pdostatement.php
- rename methods `rowCount()` -> `getRowCount()` and `columnCount()` -> `getColumnCount()`
- MySQL: removed timezone setting. Use onConnect[] event instead. ("commit":https://github.com/nette/nette/commit/61c9d9f1c254334e82b9388cdc95d3256e6fd71e)

Are you using Nette Database Table (NDBT), a great part of the NDB to which is accessed via `$database->table(...)`?

- methof `table()` was moved from `Connection` to new class `Nette\Database\Context`. It "containes":http://api.nette.org/2.1.0/Nette.Database.Context.html all of the important methods for working with databases, so feel free to change the `Connection` for `Context` and you're done.
- properties of `ActiveRow` are now read-only, for updating use `$row->update(array('field' => 'value'))`. The old behavior had so many difficulties, sorry.
- backjoin syntax was changed from `book_tag:tag.name` to `:book_tag.tag.name` (see semicolons)
- instead of second argument `$having` in method `group()` use method `having()`
- Selection: removed support for INNER join in where statement ("commit":https://github.com/nette/nette/commit/68314840e2429351d1e37e00c6070a21bdc36744)


Dependency Injection (DI)
-------------------------

- class `Nette\Config\Configurator` -> `Nette\Configurator`
- v konfiguračním souboru se sloučily definice `factories` a `services` do společného `services`. Jen těm, co byly původně factories, přidejte klíč `autowired: no`.
- in configuration file was merged definition of factories a services in common `services`. Append key `autowired: no` to the factories.
- introduced "buller" syntax for anonymous services:

/--code neon
services:
	Namespace\Class: self  # old way

	- Namespace\Class  # new way
\--

Work directly with the DI container is usually not a good idea, but if you do so:
- factory method call as `$container->createService('name')` instead of `$container->createName()`
- all default factories are deprecated: `createLatte()`, `createCache()`, `createMail()` a `createBasicForm()`
- access to services via `$container->getService()` or `getByType()` instead of `$container->nazevSluzby`
- Container: removed property `$classes`, removed parameter `$meta` in method `addService()`
- ServiceDefinition: removed property `$internal` and method `setInternal()`
- ContainerBuilder: method `generateClass()` is deprecated, use `generateClasses()[0]` instead
- ContainerBuilder operates on expanded parameters, removed `Helpers: escape()`
- Configurator: deprecated parameter `productionMode`, use `debugMode` instead
- Configurator: methods `setProductionMode`, `isProductionMode` and `detectProductionMode` are deprecated, use `*Debug*` variants instead
- Container: removed deprecated property `$params`, use `$parameters` instead

If you write your own extensions, you should know that these namespaces was renamed: `Nette\Config` -> `Nette\DI` and `Nette\Utils\PhpGenerator` -> `Nette\PhpGenerator`.

Compared to the dev-version the annotation `@inject` a methods `inject()` are processed automatically only for presenters. They can be enabled using key `inject: yes` in the definition.

If you are using old `Environment`, it will require to set constant `TEMP_DIR`.


Application & Presenter
-----------------------
- Presenter now avoids injecting an array to a persistent parameter. However, if array is what you want, set it as default value,
- deperecated methods `getService()` (use `getContext()->getService()` instead), `getHttpContext()` and `getApplication()`
- magic `getParameter(NULL)` -> `getParameters()`
- instead of strange `invalidateControl()` you can use `redrawControl()`
- Application: methods `storeRequest()` and `restoreRequest()` are deprecated, call them on `UI\Presenter` instead
- Application\Routers\Route: foo-parameters are not optional when pattern is missing


Latte
-----
- default content type is HTML (instead of XHTML), you can switch this back "in configuration":http://doc.nette.org/en/2.1/configuring (`nette: xhtml: true`)
- automaticlaly quotes attributes in `<a title={$title}>` (it shouldn't cause any problems)
- attribute `n:input` has changed to `n:name` so it can be used not only on `<input>`, but also on label, select, form and textarea
- deprecated macros `{attr}` (replaced by `n:attr`) and `{assign}` -> `{var}`
- instead of exclamation mark notation `{!$var}` it is recommended to use `{$var|noescape}` it's more obvious
- the short block notation `{#block}` you may have used in dev-version didn't get it to 2.1 - it wasn't comprehensible
- native support for empty macros, use for example `{label foo /}` instead of `{label foo}`

ther is a new feature in Latte which in `<a href={$url}>` checks `$url` for something like `javascript:hackTheWeb()`. Allowed protocols are only http, https, ftp, mailto and of course relative paths. It checks also attributes src, action, formaction and `<object data=...>`. If you need to skip this check somewhere, use the `|nosafeurl` modifier.

A minor change related to manual rendering of checkboxes is mentioned later.


Forms
---------
Checkboxes and RadioLists are now rendered in a more practical format `<label><input>...</label>` instead of `<label>...</label><input>`. As a result `getLabel()` method or `{label}` returns nothing and `getControl()` or `{input}` returns HTML in the new format. If you need the old behavior switch to the partial rendering mode by adding a colon: `{label nazevprvku:}` a `{input nameofcontrol:}`. Easy.

Macro `{control form}` now always renders error messages for individual controls beside them and only the unattached ones above the form. When rendering manually it is recommended to do it the same way, "for example like this":https://github.com/nette/sandbox/blob/f1819483da6467af1706fbc6b5679aa2f79aa8d0/app/templates/components/form.latte.

- `setValue()` on colntrols checks the value and throws an exception in case of error instead of former silence
- validation rules like `Form::INTEGER`, `NUMERIC` and `FLOAT` convert its value to integer, respectively float
- TextArea: removed default values of `cols` and `rows` attributes (they existed only because HTML4 required them)
- fields marked by `setDisabled()` don't show up in `$form->getValues()` (browser doesn't even send the values)
- deprecated `SelectBox::setPrompt(TRUE)`, instead of TRUE use a string
- renamed `MultiSelectBox::getSelectedItem()` -> `getSelectedItems()`
- JSON is used in HTML attributes `data-nette-rules`, so don't forget to use current `netteForms.js`
- Form: removed deprecated event `$onInvalidSubmit`, use `$onError` instead
- RadioList: calling `getValue(TRUE)` is deprecated, use `getRawValue()` instead

Debugger
---------
- `Nette\Diagnostics\Debugger::$blueScreen` -> `Debugger::getBlueScreen()`
- and accordingly `$bar` -> `getBar()`, `$logger` -> `getLogger()` and `$fireLogger` -> `getFireLogger()`
- deprecated `Nette\Diagnostics\Debugger::tryError()`, `catchError()` a also `toStringException()`, instead of which use simple `trigger_error()`
- deprecated internal `Nette\Diagnostics\Helpers::clickableDump()` and `htmlDump()`, they are replaced by a new class `Dumper`


Mail
----
- Deprecated method `Nette\Mail\Message::send()`, use mailer, see "the documentation":http://doc.nette.org/en/2.1/mailing.
- Mail\Message: methods `setHtmlBody()` and `setBody()` render template immediately
- MimePart: removed method `generateMessage()`, use `getEncodedMessage()` instead


misc.
-------
- Nette Framework abandons PHP 5.2, `migration-53.php` tool will help you with migration to namespaces
- minified version is now in "PHAR format":http://www.php.net/manual/en/book.phar.php, so instead of `nette.min.php` you will find `nette.phar` in distribution, however it can be used the same way
- `Nette\Utils\Finder::find($mask)` filters by the mask not only files, but also directories
- `Nette\Security\User` requires authenticator in constructor, watch out circular dependencies
- loader does no more set `iconv_set_encoding()` and `mb_internal_encoding()`
- deprecated constants `NETTE, NETTE_DIR a NETTE_VERSION_ID`
- and class `Nette\Loaders\AutoLoader`
- and variable `Nette\Framework::$iAmUsingBadHost`
- it is recommended not to use `callback()` and class `Nette\Callback` - global functions can cause "complications":https://github.com/nette/nette/issues/1187
- renamed namespace `Nette\Utils\PhpGenerator` -> `Nette\PhpGenerator`
- Nette warns you with message „Possible problem: you are sending a cookie while already having some data in output buffer,“ if you try to send HTTP header or cookie and an output has already been sent, even just to buffer. It's because the buffer can overflow.
- InstanceFilter: removed entirely
- ResursiveFilter: removed method `accept()` and parameter `$childrenCallback` in constructor
- RequestFactory: removed method `setEncoding()`, only UTF-8 and binary (via `setBinary()`) is now supported
- ObjectMixin: removed method `callProperty()`
- ObjectMixin: removes support for non-registered extension methods (`*_prototype_*` functions)
